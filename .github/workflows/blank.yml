# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      selenium:
        image: selenium/standalone-firefox
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2.1.4
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.8

      # Runs a single command using the runners shell
      - name: Install Black & check all python file
        run: pip install black && black --check .
      - name: install dependencies
        run: pip install -r ./backend/scraper/requirements.txt
      - name: Check firefox
        run: firefox -v
      - name: Generate coverage report
        run: |
          pip install pytest
          pip install pytest-cov
          cd ./backend/scraper
          pytest --cov=../../ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          files: ./coverage1.xml,./coverage2.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.gz
          verbose: true
      - name: Install pigar
        run: python -m pip install pigar
      - name: update requirements.txt
        run: python -m pigar -c ./backend/scraper 
      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        with:
          author_name: Micky
          author_email: mail@example.com
          message: "Update requirement.txt"
          add: "*.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
